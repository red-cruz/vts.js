/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/ValidateThenSubmit.js":
/*!***********************************!*\
  !*** ./src/ValidateThenSubmit.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ValidateThenSubmit)\n/* harmony export */ });\n/* harmony import */ var _utils_VtsFormValidator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/VtsFormValidator.js */ \"./src/utils/VtsFormValidator.js\");\n/* harmony import */ var _mixins_Events_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mixins/Events.js */ \"./src/mixins/Events.js\");\n/* harmony import */ var _mixins_Rules_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mixins/Rules.js */ \"./src/mixins/Rules.js\");\n/* harmony import */ var _mixins_Validation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mixins/Validation.js */ \"./src/mixins/Validation.js\");\n/* harmony import */ var _utils_setVtsConfig_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/setVtsConfig.js */ \"./src/utils/setVtsConfig.js\");\n/* harmony import */ var _mixins_Form_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mixins/Form.js */ \"./src/mixins/Form.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./defaults/index.js */ \"./src/defaults/index.js\");\n/* harmony import */ var _utils_deepMerge_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/deepMerge.js */ \"./src/utils/deepMerge.js\");\n// @ts-check\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/// <reference path=\"./ValidateThenSubmit.d.ts\" />\r\nclass ValidateThenSubmit {\r\n  constructor(formId, config = {}) {\r\n    const form = _utils_VtsFormValidator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].validateForm(formId);\r\n    this.fields = form.querySelectorAll('[name]:not([data-vts-ignored])');\r\n    this.form = form;\r\n    this.#init(config);\r\n  }\r\n\r\n  #init(config) {\r\n    const form = this.form;\r\n    // mixin\r\n    Object.assign(this, _mixins_Form_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"], (0,_utils_setVtsConfig_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(form, config));\r\n    Object.assign(\r\n      ValidateThenSubmit.prototype,\r\n      _mixins_Events_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\r\n      _mixins_Rules_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\r\n      _mixins_Validation_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]\r\n    );\r\n\r\n    // check instance\r\n    _utils_VtsFormValidator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].checkInstance(form.id);\r\n\r\n    this._convertRulesToMap();\r\n    this._addEventListeners();\r\n  }\r\n\r\n  static setDefaults(config) {\r\n    (0,_utils_deepMerge_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_defaults_index_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"], config);\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://vts-form/./src/ValidateThenSubmit.js?");

/***/ }),

/***/ "./src/defaults/ajax.js":
/*!******************************!*\
  !*** ./src/defaults/ajax.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/** @type {import(\"../types/config\").VtsAjaxSettings} */\r\nconst ajaxHandler = {\r\n  action: '',\r\n  request: {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  },\r\n  beforeSend: (requestInit, abortController, form) => {},\r\n  complete: (form) => {},\r\n  error: (errorData, errorResponse, form) => {\r\n    const data = errorData ? errorData : {};\r\n    const title = 'message' in errorResponse ? errorResponse.message : 'Error!';\r\n    const html =\r\n      'stack' in errorResponse ? errorResponse.stack : 'Unknown error occurred';\r\n\r\n    console.table(errorResponse);\r\n    const text = data.title || title;\r\n    const ok = confirm(text + ':\\n' + 'Click \"ok\" to view more details.');\r\n    if (ok) {\r\n      const newWindow = window.open();\r\n      if (newWindow) newWindow.document.body.innerHTML = data.html ?? html;\r\n    }\r\n  },\r\n  success: (data, response, form) => {\r\n    alert(data.title + ':\\n' + data.text);\r\n    form.reset();\r\n\r\n    /** @type {NodeListOf<HTMLElement>} */\r\n    const fields = form.querySelectorAll('[name]:not([data-vts-ignored])');\r\n\r\n    fields.forEach((field) => {\r\n      field.style.border = '';\r\n      field.remove;\r\n    });\r\n    form.classList.remove('was-validated');\r\n  },\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ajaxHandler);\r\n\n\n//# sourceURL=webpack://vts-form/./src/defaults/ajax.js?");

/***/ }),

/***/ "./src/defaults/handler.js":
/*!*********************************!*\
  !*** ./src/defaults/handler.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// @ts-check\r\n/** @type {*} */\r\nconst vtsHandlers = {\r\n  invalid: (data, form) => {\r\n    showFeedback('invalid', data);\r\n  },\r\n  valid: (data, form) => {\r\n    showFeedback('valid', data);\r\n  },\r\n};\r\n\r\n/**\r\n * @param {string} state\r\n * @param {any} data\r\n */\r\nfunction showFeedback(state, data) {\r\n  for (const key in data) {\r\n    const { field, label, message = ' ' } = data[key];\r\n    const parent = field.parentNode;\r\n    const className = `${state}-feedback`;\r\n    const sibling = parent?.querySelector(`.${className}`);\r\n\r\n    // field.style.border =\r\n    //   state === 'valid' ? '1px solid #146c43' : '1px solid #b02a37';\r\n    if (sibling) {\r\n      sibling.textContent = `${message}`;\r\n    } else {\r\n      const div = document.createElement('div');\r\n      div.classList.add(`${className}`);\r\n      div.textContent = `${message}`;\r\n      // div.style.color = state === 'valid' ? '#146c43' : '#b02a37';\r\n      parent?.append(div);\r\n    }\r\n\r\n    const validSib = parent?.querySelector(`.valid-feedback`);\r\n    const invalidSib = parent?.querySelector(`.invalid-feedback`);\r\n\r\n    // if (state === 'valid') {\r\n    //   toggleElementDisplay(validSib, invalidSib);\r\n    // } else {\r\n    //   toggleElementDisplay(invalidSib, validSib);\r\n    // }\r\n\r\n    /**\r\n     * @param {Element | null | undefined} show the element to show\r\n     * @param {Element | null | undefined} hide the element to hide\r\n     */\r\n    function toggleElementDisplay(show, hide) {\r\n      if (show instanceof HTMLElement) {\r\n        show.style.display = '';\r\n      }\r\n      if (hide instanceof HTMLElement) {\r\n        hide.style.display = 'none';\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (vtsHandlers);\r\n\n\n//# sourceURL=webpack://vts-form/./src/defaults/handler.js?");

/***/ }),

/***/ "./src/defaults/index.js":
/*!*******************************!*\
  !*** ./src/defaults/index.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ajax__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ajax */ \"./src/defaults/ajax.js\");\n/* harmony import */ var _handler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handler */ \"./src/defaults/handler.js\");\n// @ts-check\r\n\r\n\r\n\r\n/**\r\n * Global default configuration for Vts (Validate Then Submit).\r\n *\r\n * @type {import('../ValidateThenSubmit').VtsConfig}\r\n */\r\nconst vtsDefaults = {\r\n  ajax: _ajax__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\r\n  class: {\r\n    form: 'was-validated',\r\n    invalid: 'invalid-feedback',\r\n    valid: 'valid-feedback',\r\n  },\r\n  halt: false,\r\n  handlers: _handler__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\r\n  listen: false,\r\n  message: {\r\n    invalid: 'Invalid ${label}',\r\n    valid: '',\r\n  },\r\n  rules: {},\r\n  stopPropagation: true,\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (vtsDefaults);\r\n\n\n//# sourceURL=webpack://vts-form/./src/defaults/index.js?");

/***/ }),

/***/ "./src/mixins/Events.js":
/*!******************************!*\
  !*** ./src/mixins/Events.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_VtsFormValidator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/VtsFormValidator */ \"./src/utils/VtsFormValidator.js\");\n// @t\r\n\r\n\r\n/** @type {import('../ValidateThenSubmit').VtsEventsMixin} */\r\nconst vtsEvents = {\r\n  _addEventListeners() {\r\n    // Form\r\n    const form = this.form;\r\n    form.addEventListener('submit', (e) => {\r\n      e.preventDefault();\r\n      if (this.stopPropagation) {\r\n        e.stopPropagation();\r\n      }\r\n\r\n      const formClass = this.class.form;\r\n      const wasValidated = form.classList.contains(formClass);\r\n      const shouldListen = this.listen;\r\n      if (!shouldListen && !wasValidated) {\r\n        this._addFieldListener();\r\n      }\r\n\r\n      // validate each field\r\n      for (const field of this.fields) this._checkFieldValidity(field);\r\n\r\n      this._reportValidity();\r\n\r\n      this.form.classList.add(formClass);\r\n\r\n      if (this.isFormValid() && !this.halt) {\r\n        this.submit();\r\n      }\r\n    });\r\n\r\n    // Fields\r\n    const shouldListen = this.listen;\r\n    shouldListen && _addFieldListener();\r\n\r\n    // Match events\r\n    this._attachMatchEvents();\r\n  },\r\n  _addFieldListener() {\r\n    this.fields.forEach((field) => {\r\n      const rules = this._getFieldRules(field.name);\r\n      const eventType = this._getEventType(field.type, rules?.eventType);\r\n      field.addEventListener(eventType, () => {\r\n        this._checkFieldValidity(field);\r\n        this._reportValidity();\r\n      });\r\n    });\r\n  },\r\n  _attachMatchEvents() {\r\n    for (const [fieldName, rule] of this.rules.entries()) {\r\n      const match = rule.match;\r\n      const form = this.form;\r\n      const field = form.querySelector(`[name=\"${fieldName}\"]`);\r\n      const rules = this._getFieldRules(fieldName);\r\n      const eventType = this._getEventType(field.type, rules?.eventType);\r\n      if (match) {\r\n        const inputEvent = new Event(eventType);\r\n        const matchField = _utils_VtsFormValidator__WEBPACK_IMPORTED_MODULE_0__[\"default\"].validateField(form, match);\r\n        form.querySelector(`[name=\"${match}\"]`);\r\n        matchField.addEventListener(eventType, function () {\r\n          field.dispatchEvent(inputEvent);\r\n        });\r\n      }\r\n    }\r\n  },\r\n  _getEventType(fieldType, ruleEventType) {\r\n    const changeEvents = [\r\n      'radio',\r\n      'select-one',\r\n      'select-multiple',\r\n      'checkbox',\r\n      'file',\r\n      'range',\r\n    ];\r\n\r\n    // Update event to 'change' based on the field type\r\n    let eventType = changeEvents.includes(fieldType) ? 'change' : 'input';\r\n\r\n    // Update event based on the specified rule\r\n    eventType = ruleEventType || eventType;\r\n\r\n    return eventType;\r\n  },\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (vtsEvents);\r\n\n\n//# sourceURL=webpack://vts-form/./src/mixins/Events.js?");

/***/ }),

/***/ "./src/mixins/Form.js":
/*!****************************!*\
  !*** ./src/mixins/Form.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/** @type {import('../ValidateThenSubmit').VtsForm} */\r\nconst vtsForm = {\r\n  isFormValid() {\r\n    return this.form.checkValidity();\r\n  },\r\n\r\n  async submit() {\r\n    const ajax = this.ajax;\r\n    const form = this.form;\r\n    try {\r\n      let url = ajax.action;\r\n\r\n      [url, ajax.request] = vtsFormBeforeSend.call(this, url, ajax.request);\r\n\r\n      const response = await fetch(new Request(url, ajax.request));\r\n      if (!response.ok) {\r\n        throw new Error(response.statusText);\r\n      }\r\n      const contentType = response.headers.get('content-type');\r\n      if (contentType && contentType.includes('application/json')) {\r\n        const [data, rawResponse] = await Promise.all([\r\n          response.json(),\r\n          response,\r\n        ]);\r\n        ajax.success(data, rawResponse, form);\r\n      } else {\r\n        throw new TypeError('Response is not in JSON format');\r\n      }\r\n    } catch (error) {\r\n      let errorData;\r\n      if (error instanceof Response) {\r\n        try {\r\n          errorData = await error.json();\r\n        } catch (e) {\r\n          errorData = e;\r\n        }\r\n      } else {\r\n        errorData = null;\r\n      }\r\n      ajax.error(errorData, error, form);\r\n\r\n      if (this.ajax.request?.signal?.aborted)\r\n        this.ajax.abortController = new AbortController();\r\n    }\r\n    ajax.complete(form);\r\n  },\r\n};\r\n\r\n/**\r\n * @description\r\n * @author RED\r\n * @param {string} url\r\n * @param {RequestInit} request\r\n * @returns {[url, request]}\r\n * @this {import('../ValidateThenSubmit').default}\r\n */\r\nfunction vtsFormBeforeSend(url, request) {\r\n  const formData = new FormData(this.form);\r\n\r\n  this.ajax.abortController = new AbortController();\r\n  this.ajax.request.signal = this.ajax.abortController.signal;\r\n\r\n  request = this.ajax.request =\r\n    this.ajax.beforeSend(\r\n      this.ajax.request,\r\n      this.ajax.abortController,\r\n      this.form\r\n    ) || request;\r\n\r\n  const get = new RegExp('get', 'i');\r\n  const isGetMethod = get.test(request.method);\r\n  if (isGetMethod) {\r\n    const query = new URLSearchParams(formData.toString());\r\n    url = this.ajax.action = `${url}/?${query}`;\r\n  } else {\r\n    request.body = formData;\r\n  }\r\n  return [url, request];\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (vtsForm);\r\n\n\n//# sourceURL=webpack://vts-form/./src/mixins/Form.js?");

/***/ }),

/***/ "./src/mixins/Rules.js":
/*!*****************************!*\
  !*** ./src/mixins/Rules.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_VtsFormValidator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/VtsFormValidator */ \"./src/utils/VtsFormValidator.js\");\n/* harmony import */ var _utils_getFieldLabel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/getFieldLabel */ \"./src/utils/getFieldLabel.js\");\n// @ts-check\r\n\r\n\r\n\r\n/** @type {import('../ValidateThenSubmit').VtsRulesMixin} */\r\nconst vtsRules = {\r\n  _applyRules(rules, field, label) {\r\n    let message = this.message.invalid || 'Invalid field';\r\n    let pattern = 'pattern' in rules ? rules.pattern : '';\r\n    const isMatch = 'match' in rules && !pattern;\r\n    /** @type {*} */\r\n    let matchingField;\r\n    let matchValue = '';\r\n    if (isMatch) {\r\n      // get matching field target\r\n      matchingField = _utils_VtsFormValidator__WEBPACK_IMPORTED_MODULE_0__[\"default\"].validateField(this.form, rules.match);\r\n      // get value of target field\r\n      matchValue = matchingField.value;\r\n      // overwrite pattern\r\n      pattern = rules.flags?.includes('g')\r\n        ? matchValue + '\\\\b'\r\n        : `^${matchValue}$`;\r\n    }\r\n\r\n    // set validity\r\n    const regExp = new RegExp(pattern, rules.flags);\r\n    if (regExp.test(field.value)) {\r\n      message = rules.message?.valid ?? this.message.valid ?? '';\r\n      field.setCustomValidity('');\r\n    } else {\r\n      message = rules.message?.invalid ?? message;\r\n      field.setCustomValidity(message);\r\n    }\r\n\r\n    // replace message placeholders for 'match'\r\n    if ('match' in rules) {\r\n      message = message\r\n        ?.replace(/\\${targetValue}/g, matchValue)\r\n        .replace(/\\${targetLabel}/g, (0,_utils_getFieldLabel__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(matchingField, this.form));\r\n    }\r\n\r\n    warnMultiRule(rules, label);\r\n\r\n    return message;\r\n  },\r\n\r\n  _getFieldRules(fieldName) {\r\n    const rules = this.rules;\r\n\r\n    if (rules && rules instanceof Map) {\r\n      return rules.get(fieldName);\r\n    }\r\n\r\n    return undefined;\r\n  },\r\n  _convertRulesToMap() {\r\n    const rules = this.rules;\r\n    const rulesMap = new Map();\r\n\r\n    for (const fieldName in rules) {\r\n      if (Object.prototype.hasOwnProperty.call(rules, fieldName)) {\r\n        rulesMap.set(fieldName, rules[fieldName]);\r\n      }\r\n    }\r\n\r\n    this.rules = rulesMap;\r\n  },\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (vtsRules);\r\n/**\r\n * Displays a warning message if both \"pattern\" and \"match\" properties exist in the field rule.\r\n *\r\n * @private\r\n * @param {import('../types/rules').VtsRules[string]} rules - The validation rules for the field.\r\n * @param {string} label - The label of the field.\r\n */\r\nfunction warnMultiRule(rules, label) {\r\n  if ('pattern' in rules && 'match' in rules) {\r\n    console.warn(\r\n      `Both \"pattern\" and \"match\" properties exist in the field rule for ${label}. ` +\r\n        'Ignoring the \"match\" property.'\r\n    );\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://vts-form/./src/mixins/Rules.js?");

/***/ }),

/***/ "./src/mixins/Validation.js":
/*!**********************************!*\
  !*** ./src/mixins/Validation.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_getFieldLabel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getFieldLabel */ \"./src/utils/getFieldLabel.js\");\n\r\n\r\n/** @type {import('../types/validation').VtsValidation} */\r\nconst vtsValidation = {\r\n  _data: {\r\n    validFields: new Map(),\r\n    invalidFields: new Map(),\r\n  },\r\n  _checkFieldValidity(field) {\r\n    field.setCustomValidity('');\r\n    const label = (0,_utils_getFieldLabel__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(field, this.form);\r\n    let fieldData = {\r\n      field: field,\r\n      label: label,\r\n      message: this._validate(field, label),\r\n    };\r\n\r\n    this._setValidityData(field, fieldData);\r\n  },\r\n  _reportValidity() {\r\n    const data = this._data;\r\n    const validData = Object.fromEntries(data.validFields);\r\n    const invalidData = Object.fromEntries(data.invalidFields);\r\n    const form = this.form;\r\n    const handlers = this.handlers;\r\n    handlers.valid(validData, form);\r\n    handlers.invalid(invalidData, form);\r\n  },\r\n  _setValidityData(field, data) {\r\n    if (field.validity.valid) {\r\n      this._data.invalidFields.delete(field.name);\r\n      this._data.validFields.set(field.name, data);\r\n    } else {\r\n      this._data.validFields.delete(field.name);\r\n      this._data.invalidFields.set(field.name, data);\r\n    }\r\n  },\r\n  _validate(field, label) {\r\n    let message = field.validationMessage;\r\n    const rules = this._getFieldRules(field.name);\r\n    const validity = field.validity;\r\n\r\n    for (const key in validity) {\r\n      // default rule message object\r\n      const messageConfig = this.message;\r\n      // field specific rule message\r\n      const ruleMsg = rules?.message ? rules.message[key] : null;\r\n      const custMsg = ruleMsg ?? messageConfig[key];\r\n\r\n      if (validity[key]) {\r\n        if (validity.valid) {\r\n          // set custom error if rule config exists\r\n          if (rules) message = this._applyRules(rules, field, label);\r\n          // else the field is valid\r\n          else message = custMsg;\r\n        }\r\n        // invalid\r\n        else message = custMsg ?? message;\r\n        break;\r\n      }\r\n    }\r\n    // replace placeholders\r\n    message = message\r\n      ?.replace(/\\${value}/g, field.value)\r\n      .replace(/\\${label}/g, label);\r\n\r\n    return message;\r\n  },\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (vtsValidation);\r\n\n\n//# sourceURL=webpack://vts-form/./src/mixins/Validation.js?");

/***/ }),

/***/ "./src/utils/VtsFormValidator.js":
/*!***************************************!*\
  !*** ./src/utils/VtsFormValidator.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ VtsFormValidator)\n/* harmony export */ });\n// @ts-check\r\n/** @type {string[]} - form Ids */\r\nconst vtsInstances = [];\r\n\r\n/**\r\n * Utility class for form type validation and instance checking.\r\n * @abstract\r\n */\r\nclass VtsFormValidator {\r\n  /**\r\n   * Checks if there is an existing instance associated with the provided form ID.\r\n   * Throws an error if an instance already exists for the form ID.\r\n   * If no instance exists, it adds the form ID to the instances array.\r\n   *\r\n   * @param {string} formId - The ID of the form element to check for an existing instance.\r\n   * @throws {Error} Throws an error if an instance already exists for the specified form ID.\r\n   */\r\n  static checkInstance(formId) {\r\n    // Check if an instance already exists for the form ID\r\n    if (vtsInstances.includes(formId)) {\r\n      throw new Error(\r\n        `An instance already exists for the specified form element: ${formId}`\r\n      );\r\n    }\r\n\r\n    // Add the form ID to the instances array\r\n    vtsInstances.push(formId);\r\n  }\r\n\r\n  /**\r\n   * Retrieves the form element with the provided form ID and checks its validity.\r\n   *\r\n   * @param {string} formId - The ID of the form element to retrieve and check.\r\n   * @returns {HTMLFormElement} The valid HTML form element.\r\n   * @throws {TypeError} Throws a TypeError if the form element is not found or is not a valid HTML form element.\r\n   */\r\n  static validateForm(formId) {\r\n    const form = document.getElementById(formId);\r\n\r\n    // Check if form element exists\r\n    if (!form) {\r\n      throw new TypeError(\r\n        `The form element with ID \"${formId}\" was not found.`\r\n      );\r\n    }\r\n\r\n    // Check if form element is a valid HTML form element\r\n    if (!(form instanceof HTMLFormElement)) {\r\n      throw new TypeError(\r\n        `The element with ID \"${formId}\" is not a valid HTML form element.\r\n        Please ensure you are passing the ID of a valid form element.`\r\n      );\r\n    }\r\n\r\n    return form;\r\n  }\r\n\r\n  /**\r\n   * Checks the field element in the form and validates its type.\r\n   * Throws an error if the field element is not found or is not a valid field element.\r\n   *\r\n   * @param {HTMLFormElement} form - The HTML form element.\r\n   * @param {string} fieldName - The name of the field element.\r\n   * @returns {HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement} - The validated field element.\r\n   * @throws {TypeError} Throws a TypeError if the field element is not found or is not a valid field element.\r\n   */\r\n  static validateField(form, fieldName) {\r\n    const field = form.querySelector(`[name=\"${fieldName}\"]`);\r\n\r\n    // Check if field element exists\r\n    if (!field) {\r\n      throw new TypeError(\r\n        `The field element with the name \"${fieldName}\" was not found in the form.`\r\n      );\r\n    }\r\n\r\n    // Check if field element is a valid field element\r\n    if (\r\n      !(\r\n        field instanceof HTMLInputElement ||\r\n        field instanceof HTMLSelectElement ||\r\n        field instanceof HTMLTextAreaElement\r\n      )\r\n    ) {\r\n      throw new TypeError(\r\n        `The element with name \"${fieldName}\" is not a valid field element. \r\n      Please ensure you are passing the name of a valid field in the form.`\r\n      );\r\n    }\r\n\r\n    return field;\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://vts-form/./src/utils/VtsFormValidator.js?");

/***/ }),

/***/ "./src/utils/deepMerge.js":
/*!********************************!*\
  !*** ./src/utils/deepMerge.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ deepMerge)\n/* harmony export */ });\n/**\r\n * Deeply merges multiple objects into a single object.\r\n *\r\n * @param {object} target - The target object to merge the sources into.\r\n * @param {...object} sources - The source objects to merge into the target.\r\n * @returns {object} - The merged object.\r\n */\r\nfunction deepMerge(target, ...sources) {\r\n  if (!sources.length) {\r\n    return target;\r\n  }\r\n\r\n  const source = sources.shift();\r\n\r\n  for (const key in source) {\r\n    if (\r\n      typeof source[key] === 'object' &&\r\n      source[key] !== null &&\r\n      !Array.isArray(source[key])\r\n    ) {\r\n      if (\r\n        !target[key] ||\r\n        typeof target[key] !== 'object' ||\r\n        Array.isArray(target[key])\r\n      ) {\r\n        target[key] = {};\r\n      }\r\n\r\n      deepMerge(target[key], source[key]);\r\n    } else {\r\n      target[key] = source[key];\r\n    }\r\n  }\r\n  return deepMerge(target, ...sources);\r\n}\r\n\n\n//# sourceURL=webpack://vts-form/./src/utils/deepMerge.js?");

/***/ }),

/***/ "./src/utils/getFieldLabel.js":
/*!************************************!*\
  !*** ./src/utils/getFieldLabel.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getFieldLabel)\n/* harmony export */ });\n/**\r\n * Retrieves the label for the specified field within the given form.\r\n *\r\n * @param {HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement} field - The field element for which to retrieve the label.\r\n * @param {HTMLFormElement} form - The form element containing the field.\r\n * @returns {string} - The label text.\r\n */\r\nfunction getFieldLabel(field, form) {\r\n  const dataLabel = field.dataset.vtsLabel;\r\n  const labelElement = form.querySelector(`label[for=\"${field.id}\"]`);\r\n  const labelText = labelElement?.textContent;\r\n  const placeholder = field.getAttribute('placeholder');\r\n  const label = dataLabel || labelText || placeholder || '';\r\n  return label;\r\n}\r\n\n\n//# sourceURL=webpack://vts-form/./src/utils/getFieldLabel.js?");

/***/ }),

/***/ "./src/utils/setVtsConfig.js":
/*!***********************************!*\
  !*** ./src/utils/setVtsConfig.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ setVtsConfig)\n/* harmony export */ });\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../defaults */ \"./src/defaults/index.js\");\n/* harmony import */ var _deepMerge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./deepMerge */ \"./src/utils/deepMerge.js\");\n// @ts-check\r\n\r\n\r\n\r\n/**\r\n * Sets the configuration options for Vts (Validate Then Submit).\r\n *\r\n * @description This function merges the provided configuration options with the default configuration\r\n * and returns the resulting configuration object.\r\n *\r\n * @export\r\n * @param {HTMLFormElement} form - The HTML form element.\r\n * @param {Partial<import('../ValidateThenSubmit').VtsConfig>} config - The partial configuration options.\r\n * @returns {import('../ValidateThenSubmit').VtsConfig} - The merged configuration options.\r\n */\r\nfunction setVtsConfig(form, config) {\r\n  /** @type {import('../types/config').VtsConfig} */\r\n  const options = (0,_deepMerge__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({}, _defaults__WEBPACK_IMPORTED_MODULE_0__[\"default\"], config);\r\n\r\n  /** @type {Partial<import('../types/config').VtsAjaxSettings>} */\r\n  const ajax = options.ajax;\r\n  options.ajax.action = ajax.action || form.action;\r\n\r\n  const req = ajax.request;\r\n  /** @type {RequestInit} */\r\n  const request = {\r\n    method: req?.method || form.method || 'get',\r\n  };\r\n\r\n  /** @type {RequestInit} */\r\n  const merge = (0,_deepMerge__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(req, request);\r\n  options.ajax.request = merge;\r\n\r\n  return options;\r\n}\r\n\n\n//# sourceURL=webpack://vts-form/./src/utils/setVtsConfig.js?");

/***/ }),

/***/ "./test/config.js":
/*!************************!*\
  !*** ./test/config.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_ValidateThenSubmit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../src/ValidateThenSubmit */ \"./src/ValidateThenSubmit.js\");\n// @ts-checks\r\n// import Swal from 'sweetalert2';\r\n\r\nconst Vts = _src_ValidateThenSubmit__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n  const test = new Vts('myForm');\r\n  console.log(test);\r\n});\r\n\r\n// VTS GLOBAL CONFIGURATION\r\n\r\nVts.setDefaults({\r\n  // AJAX EVENTS\r\n  ajax: {\r\n    beforeSend: (request, abortController, form) => {\r\n      Swal.fire({\r\n        title: 'Loading',\r\n        icon: 'info',\r\n        text: 'Please wait.',\r\n        allowOutsideClick: false,\r\n        showCancelButton: true,\r\n        cancelButtonText: 'Cancel',\r\n      }).then((result) => {\r\n        if (result.isDismissed) {\r\n          abortController.abort();\r\n        }\r\n      });\r\n      return request;\r\n    },\r\n    success: function (data, response, form) {\r\n      Swal.fire({\r\n        title: data.title ?? 'Server connection: ' + response.statusText,\r\n        html: data.text,\r\n        icon: data.icon ?? 'info',\r\n      });\r\n      form.classList.remove('was-validated');\r\n      form.reset();\r\n    },\r\n    complete: (form) => {},\r\n    error: function (errorData, errorResponse, form) {\r\n      const data = errorData ? errorData : {};\r\n      const title =\r\n        'message' in errorResponse ? errorResponse.message : 'Error!';\r\n      const html =\r\n        'stack' in errorResponse\r\n          ? errorResponse.stack\r\n          : 'Unknown error occurred';\r\n\r\n      if ('name' in errorResponse && errorResponse.name === 'AbortError') {\r\n        Swal.close();\r\n        return;\r\n      }\r\n\r\n      console.table(errorResponse);\r\n\r\n      Swal.fire({\r\n        title: data.title || title,\r\n        html: data.text ?? html,\r\n        icon: data.icon || 'error',\r\n        showCancelButton: true,\r\n        cancelButtonText: 'View Error',\r\n      }).then((result) => {\r\n        if (result.dismiss === Swal.DismissReason.cancel) {\r\n          var newWindow = window.open();\r\n          if (newWindow) newWindow.document.body.innerHTML = data.text || html;\r\n        }\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\n// set rules\r\nVts.setDefaults({\r\n  // message: {\r\n  //   // valueMissing: 'This field is required',\r\n  // },\r\n  rules: {\r\n    password_confirmation: {\r\n      match: 'password',\r\n      message: {\r\n        invalid: '${label} must match ${targetLabel}',\r\n      },\r\n    },\r\n    // last_name: {\r\n    //   match: 'first_name',\r\n    //   message: {\r\n    //     valid: 'oks na',\r\n    //     invalid: '${targetValue} != ${value}',\r\n    //     valueMissing: 'required po lname',\r\n    //   },\r\n    // },\r\n  },\r\n});\r\n\n\n//# sourceURL=webpack://vts-form/./test/config.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./test/config.js");
/******/ 	
/******/ })()
;